/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  $Organisations,
  $OrganisationsInterface,
} from "../../../contracts-exposed/COrganisation.sol/$Organisations";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OrganisationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IOrganisation.EPermissions",
        name: "newPermission",
        type: "uint8",
      },
    ],
    name: "PermissionsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$__unsafe_increaseBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "firstTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchSize",
        type: "uint256",
      },
    ],
    name: "$_afterTokenTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "$_baseURI",
    outputs: [
      {
        internalType: "string",
        name: "ret0",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "firstTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchSize",
        type: "uint256",
      },
    ],
    name: "$_beforeTokenTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "$_checkOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_exists",
    outputs: [
      {
        internalType: "bool",
        name: "ret0",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_isApprovedOrOwner",
    outputs: [
      {
        internalType: "bool",
        name: "ret0",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgData",
    outputs: [
      {
        internalType: "bytes",
        name: "ret0",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgSender",
    outputs: [
      {
        internalType: "address",
        name: "ret0",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "$_ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "ret0",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "arg0",
        type: "uint256",
      },
    ],
    name: "$_owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_requireMinted",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "$_safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "$_safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "$_setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "$_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "$_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.EncodedMessage",
        name: "_encodedMessage",
        type: "tuple",
      },
    ],
    name: "$checkMessageValidity",
    outputs: [
      {
        internalType: "bool",
        name: "ret0",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "$getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "ret0",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "$getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "ret0",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "__hh_exposed_bytecode_marker",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "_nodes",
    outputs: [
      {
        internalType: "bool",
        name: "isNode",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "addNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedMessage",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "messageHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.Signature",
        name: "_signature",
        type: "tuple",
      },
    ],
    name: "checkSignature",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.EncodedMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "createOrganisation",
    outputs: [
      {
        internalType: "uint256",
        name: "newOrgId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedMessage",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "messageHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "delegateCallsToSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfOrganisationsCreated",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOfOrganisations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "_isAdmin",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "_isMember",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "isNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organisation",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "permissionOf",
    outputs: [
      {
        internalType: "enum IOrganisation.EPermissions",
        name: "permission",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum IOrganisation.EPermissions",
        name: "permission",
        type: "uint8",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x601160809081527022ba31b41027b933b0b734b9b0ba34b7b760791b60a052610100604052600660c0908152650de5a8aa886960d31b60e052600080546001600160a01b031916815591906001620000588382620001c9565b506002620000678282620001c9565b505050620000846200007e620000aa60201b60201c565b620000d2565b600880546001600160a01b0319166001600160a01b039290921691909117905562000295565b600080546001600160a01b031615620000cd57506000546001600160a01b031690565b503390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014f57607f821691505b6020821081036200017057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001c457600081815260208120601f850160051c810160208610156200019f5750805b601f850160051c820191505b81811015620001c057828155600101620001ab565b5050505b505050565b81516001600160401b03811115620001e557620001e562000124565b620001fd81620001f684546200013a565b8462000176565b602080601f8311600181146200023557600084156200021c5750858301515b600019600386901b1c1916600185901b178555620001c0565b600085815260208120601f198616915b82811015620002665788860151825594840194600190910190840162000245565b5085821015620002855787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612fe780620002a56000396000f3fe6080604052600436106103545760003560e01c806380f76021116101c6578063c4a96fa6116100f7578063d848383411610095578063ebcca7071161006f578063ebcca70714610a54578063efb43b0714610a69578063f2fde38b14610a89578063fe1c9a2414610aa957600080fd5b8063d8483834146109eb578063e07084c214610471578063e985e9c514610a0b57600080fd5b8063cd43f47d116100d1578063cd43f47d1461096b578063cef565aa1461098b578063cfeea0d4146109ab578063d261af54146109cb57600080fd5b8063c4a96fa61461090b578063c87b56dd1461092b578063cc461d621461094b57600080fd5b80639d95f1cc11610164578063a2373a821161013e578063a2373a821461088b578063b88d4fde146108ab578063bc1facf4146108cb578063c37add51146108eb57600080fd5b80639d95f1cc1461082b5780639ff2f02d1461084b578063a22cb4651461086b57600080fd5b806395d89b41116101a057806395d89b411461078e57806397d32b52146107a357806398a1f7a0146107eb578063999f066e1461080b57600080fd5b806380f760211461072257806381fb5d4b146107405780638da5cb5b1461077057600080fd5b8063313a9940116102a05780636352211e1161023e578063733555ec11610218578063733555ec146106ad57806373e3dc30146106cd5780637b77958d146106e25780637d9e10f51461070257600080fd5b80636352211e1461065857806370a0823114610678578063715018a61461069857600080fd5b806336faee601161027a57806336faee60146105c257806342842e0e146105f8578063458ee002146106185780634b4b98bd1461063857600080fd5b8063313a99401461053557806332cadf3c14610579578063342db7391461058e57600080fd5b8063146a29111161030d578063161e977d116102e7578063161e977d146104cb5780631a67bf94146104e057806323b872dd146105005780632904df291461052057600080fd5b8063146a291114610451578063147619da14610471578063150b7a021461049257600080fd5b8063017501521461036057806301ffc9a71461039557806306fdde03146103b5578063081812fc146103d7578063095ea7b31461040f57806309854d721461043157600080fd5b3661035b57005b600080fd5b34801561036c57600080fd5b5061038061037b36600461258c565b610ac9565b60405190151581526020015b60405180910390f35b3480156103a157600080fd5b506103806103b03660046125bf565b610b6e565b3480156103c157600080fd5b506103ca610bbe565b60405161038c919061262c565b3480156103e357600080fd5b506103f76103f236600461263f565b610c50565b6040516001600160a01b03909116815260200161038c565b34801561041b57600080fd5b5061042f61042a366004612658565b610c77565b005b34801561043d57600080fd5b5061042f61044c36600461263f565b610da3565b34801561045d57600080fd5b5061038061046c366004612684565b610daf565b34801561047d57600080fd5b5061042f61048c3660046126b4565b50505050565b34801561049e57600080fd5b506104b26104ad3660046127da565b610e1b565b6040516001600160e01b0319909116815260200161038c565b3480156104d757600080fd5b506103ca610e2c565b3480156104ec57600080fd5b506103806104fb366004612846565b610e48565b34801561050c57600080fd5b5061042f61051b36600461285e565b610e61565b34801561052c57600080fd5b506103f7610e99565b34801561054157600080fd5b50610555610550366004612947565b610ea3565b60408051825181526020928301516001600160a01b0316928101929092520161038c565b34801561058557600080fd5b506103ca610fd6565b34801561059a57600080fd5b506105b46e1a185c991a185d0b595e1c1bdcd959608a1b81565b60405190815260200161038c565b3480156105ce57600080fd5b506103f76105dd36600461263f565b6000908152600360205260409020546001600160a01b031690565b34801561060457600080fd5b5061042f61061336600461285e565b611015565b34801561062457600080fd5b506103f761063336600461263f565b611030565b34801561064457600080fd5b5061042f61065336600461297c565b61104d565b34801561066457600080fd5b506103f761067336600461263f565b611117565b34801561068457600080fd5b506105b461069336600461258c565b611177565b3480156106a457600080fd5b5061042f6111fd565b3480156106b957600080fd5b5061042f6106c8366004612aa5565b611211565b3480156106d957600080fd5b506105b461125a565b3480156106ee57600080fd5b506105b46106fd36600461263f565b611265565b34801561070e57600080fd5b5061038061071d366004612684565b611270565b34801561072e57600080fd5b506008546001600160a01b03166103f7565b34801561074c57600080fd5b5061038061075b36600461258c565b60096020526000908152604090205460ff1681565b34801561077c57600080fd5b506007546001600160a01b03166103f7565b34801561079a57600080fd5b506103ca6112dd565b3480156107af57600080fd5b506107de6107be366004612684565b600b60209081526000928352604080842090915290825290205460ff1681565b60405161038c9190612b2e565b3480156107f757600080fd5b5061042f610806366004612658565b6112ec565b34801561081757600080fd5b5061042f610826366004612b56565b6112fa565b34801561083757600080fd5b5061042f61084636600461258c565b611411565b34801561085757600080fd5b5061042f610866366004612b9c565b61143d565b34801561087757600080fd5b5061042f610886366004612c06565b61147e565b34801561089757600080fd5b5061042f6108a636600461263f565b6114fb565b3480156108b757600080fd5b5061042f6108c63660046127da565b611504565b3480156108d757600080fd5b506105b46108e6366004612c34565b61153d565b3480156108f757600080fd5b5061038061090636600461263f565b611585565b34801561091757600080fd5b50610380610926366004612658565b6115a4565b34801561093757600080fd5b506103ca61094636600461263f565b6115b0565b34801561095757600080fd5b5061042f610966366004612658565b611623565b34801561097757600080fd5b5061042f610986366004612658565b61162d565b34801561099757600080fd5b506105b46109a636600461258c565b611637565b3480156109b757600080fd5b5061042f6109c6366004612c76565b61169a565b3480156109d757600080fd5b5061042f6109e6366004612658565b6116a5565b3480156109f757600080fd5b5061042f610a0636600461285e565b6116af565b348015610a1757600080fd5b50610380610a26366004612cb6565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b348015610a6057600080fd5b5061042f6116ba565b348015610a7557600080fd5b5061042f610a8436600461285e565b610e8e565b348015610a9557600080fd5b5061042f610aa436600461258c565b6116c2565b348015610ab557600080fd5b5061042f610ac436600461258c565b61172f565b6008546000906001600160a01b0316610afb57506001600160a01b031660009081526009602052604090205460ff1690565b60085460405162ba80a960e11b81526001600160a01b03848116600483015290911690630175015290602401602060405180830381865afa158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b689190612ce4565b92915050565b60006001600160e01b031982166380ac58cd60e01b1480610b9f57506001600160e01b03198216635b5e139f60e01b145b80610b6857506301ffc9a760e01b6001600160e01b0319831614610b68565b606060018054610bcd90612d01565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf990612d01565b8015610c465780601f10610c1b57610100808354040283529160200191610c46565b820191906000526020600020905b815481529060010190602001808311610c2957829003601f168201915b5050505050905090565b6000610c5b82611738565b506000908152600560205260409020546001600160a01b031690565b6000610c8282611117565b9050806001600160a01b0316836001600160a01b031603610cf45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b806001600160a01b0316610d06611797565b6001600160a01b03161480610d225750610d2281610a26611797565b610d945760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610ceb565b610d9e83836117be565b505050565b610dac81611738565b50565b6000816001600160a01b0316610dc484611117565b6001600160a01b031603610dda57506001610b68565b60026000848152600b602090815260408083206001600160a01b038716845290915290205460ff166002811115610e1357610e13612b18565b149392505050565b630a85bd0160e11b5b949350505050565b6060610e4360408051602081019091526000815290565b905090565b6000610b68610e5c36849003840184612d35565b61182c565b610e72610e6c611797565b8261187f565b610e8e5760405162461bcd60e51b8152600401610ceb90612d6d565b610d9e8383836118fd565b6000610e43611797565b604080518082019091526000808252602082015260208201518251610ecd90805160209091012090565b14610f2f5760405162461bcd60e51b815260206004820152602c60248201527f546865206d657373616765206861736820646f65736e2774206d61746368207460448201526b6865206f726967696e616c2160a01b6064820152608401610ceb565b6000610f3e8360200151611a6c565b90506000610f50828560400151611abf565b905083606001516001600160a01b0316816001600160a01b031614610fa85760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b4b3b732b960911b6044820152606401610ceb565b60008460000151806020019051810190610fc29190612dba565b9050610fcd8161182c565b50949350505050565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092949350505050565b610d9e83838360405180602001604052806000815250611504565b6000818152600360205260408120546001600160a01b0316610b68565b61105861037b611797565b6110745760405162461bcd60e51b8152600401610ceb90612de6565b600061107f83610ea3565b60208101519091506001600160a01b03163314806110a8575060208101516001600160a01b0316155b6110c45760405162461bcd60e51b8152600401610ceb90612de6565b6110cd33610ac9565b806110ed575082606001516001600160a01b0316336001600160a01b0316145b6111095760405162461bcd60e51b8152600401610ceb90612de6565b610d9e836060015183611ae3565b6000818152600360205260408120546001600160a01b031680610b685760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610ceb565b60006001600160a01b0382166111e15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610ceb565b506001600160a01b031660009081526004602052604090205490565b611205611c15565b61120f6000611c8e565b565b61125385858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ce092505050565b5050505050565b6000610e43600a5490565b6000610b6882611a6c565b6000816001600160a01b031661128584611117565b6001600160a01b03160361129b57506001610b68565b60016000848152600b602090815260408083206001600160a01b038716845290915290205460ff1660028111156112d4576112d4612b18565b10159392505050565b606060028054610bcd90612d01565b6112f68282611d13565b5050565b6113068361046c611797565b6113865760405162461bcd60e51b8152602060048201526044602482018190527f4f5247414e49534154494f4e3a204f6e6c7920616e2061646d696e206f662074908201527f6865206f7267616e69736174696f6e2063616e20736574207065726d6973736960648201526337b7399760e11b608482015260a401610ceb565b6000838152600b602090815260408083206001600160a01b03861684529091529020805482919060ff191660018360028111156113c5576113c5612b18565b0217905550816001600160a01b0316837f0faa556cadb9cafbbf015fb98b93c217a4522fc3f20548c224967adf978ffb81836040516114049190612b2e565b60405180910390a3505050565b611419611c15565b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b61048c848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d4492505050565b6001600160a01b0382166114e95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201526b3634b21037b832b930ba37b960a11b6064820152608401610ceb565b6112f66114f4611797565b8383611d77565b610dac81611e3d565b61151561150f611797565b8361187f565b6115315760405162461bcd60e51b8152600401610ceb90612d6d565b61048c84848484611ce0565b600061157e83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a6192505050565b9392505050565b6000818152600360205260408120546001600160a01b03161515610b68565b600061157e838361187f565b60606115bb82611738565b60006115d260408051602081019091526000815290565b905060008151116115f2576040518060200160405280600081525061157e565b806115fc84611ed2565b60405160200161160d929190612e1d565b6040516020818303038152906040529392505050565b6112f68282611f65565b6112f682826117be565b6000611647600a80546001019055565b6000611652600a5490565b905061165e83826120f0565b6040516001600160a01b0384169082907f09402109c124efaffd270754df72c04a2bfc8c72ec2fe8bfddeffcd28b665e3890600090a392915050565b610d9e838383611d77565b6112f682826120f0565b610d9e83838361210a565b61120f611c15565b6116ca611c15565b6001600160a01b03811661172f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ceb565b610dac81611c8e565b6000818152600360205260409020546001600160a01b0316610dac5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610ceb565b600080546001600160a01b0316156117b957506000546001600160a01b031690565b503390565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906117f382611117565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600043826000015110156118775760405162461bcd60e51b815260206004820152601260248201527113595cdcd859d9481a5cc8195e1c1a5c995960721b6044820152606401610ceb565b506001919050565b60008061188b83611117565b9050806001600160a01b0316846001600160a01b031614806118d257506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610e245750836001600160a01b03166118eb84610c50565b6001600160a01b031614949350505050565b826001600160a01b031661191082611117565b6001600160a01b0316146119365760405162461bcd60e51b8152600401610ceb90612e4c565b6001600160a01b0382166119985760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ceb565b826001600160a01b03166119ab82611117565b6001600160a01b0316146119d15760405162461bcd60e51b8152600401610ceb90612e4c565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b805160209091012090565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000806000611ace8585612125565b91509150611adb8161216a565b509392505050565b816001600160a01b038116611b465760405162461bcd60e51b815260206004820152602360248201527f436f6e746578743a206e6577436f6e74657874206973207a65726f206164647260448201526265737360e81b6064820152608401610ceb565b611b4f816122b4565b60005b8251811015611c0a57600080306001600160a01b0316858481518110611b7a57611b7a612e91565b6020026020010151604051611b8f9190612ea7565b600060405180830381855af49150503d8060008114611bca576040519150601f19603f3d011682016040523d82523d6000602084013e611bcf565b606091505b5091509150818190611bf45760405162461bcd60e51b8152600401610ceb919061262c565b5050508080611c0290612ed9565b915050611b52565b50610d9e60006122b4565b611c1d611797565b6001600160a01b0316611c386007546001600160a01b031690565b6001600160a01b03161461120f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ceb565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611ceb8484846118fd565b611cf7848484846122d6565b61048c5760405162461bcd60e51b8152600401610ceb90612ef2565b6001600160a01b03821660009081526004602052604081208054839290611d3b908490612f44565b90915550505050565b611d4e8383611f65565b611d5b60008484846122d6565b610d9e5760405162461bcd60e51b8152600401610ceb90612ef2565b816001600160a01b0316836001600160a01b031603611dd85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ceb565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101611404565b6000611e4882611117565b9050611e5382611117565b600083815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526004845282852080546000190190558785526003909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60606000611edf836123db565b600101905060008167ffffffffffffffff811115611eff57611eff6126fa565b6040519080825280601f01601f191660200182016040528015611f29576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611f3357509392505050565b6001600160a01b038216611fbb5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ceb565b6000818152600360205260409020546001600160a01b0316156120205760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ceb565b6000818152600360205260409020546001600160a01b0316156120855760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ceb565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6112f6828260405180602001604052806000815250611d44565b610d9e83838360405180602001604052806000815250611ce0565b600080825160410361215b5760208301516040840151606085015160001a61214f878285856124b3565b94509450505050612163565b506000905060025b9250929050565b600081600481111561217e5761217e612b18565b036121865750565b600181600481111561219a5761219a612b18565b036121e75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610ceb565b60028160048111156121fb576121fb612b18565b036122485760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610ceb565b600381600481111561225c5761225c612b18565b03610dac5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610ceb565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0384163b156123d357836001600160a01b031663150b7a026122ff611797565b8786866040518563ffffffff1660e01b81526004016123219493929190612f57565b6020604051808303816000875af192505050801561235c575060408051601f3d908101601f1916820190925261235991810190612f94565b60015b6123b9573d80801561238a576040519150601f19603f3d011682016040523d82523d6000602084013e61238f565b606091505b5080516000036123b15760405162461bcd60e51b8152600401610ceb90612ef2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e24565b506001610e24565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061241a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612446576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061246457662386f26fc10000830492506010015b6305f5e100831061247c576305f5e100830492506008015b612710831061249057612710830492506004015b606483106124a2576064830492506002015b600a8310610b685760010192915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156124ea575060009050600361256e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561253e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166125675760006001925092505061256e565b9150600090505b94509492505050565b6001600160a01b0381168114610dac57600080fd5b60006020828403121561259e57600080fd5b813561157e81612577565b6001600160e01b031981168114610dac57600080fd5b6000602082840312156125d157600080fd5b813561157e816125a9565b60005b838110156125f75781810151838201526020016125df565b50506000910152565b600081518084526126188160208601602086016125dc565b601f01601f19169290920160200192915050565b60208152600061157e6020830184612600565b60006020828403121561265157600080fd5b5035919050565b6000806040838503121561266b57600080fd5b823561267681612577565b946020939093013593505050565b6000806040838503121561269757600080fd5b8235915060208301356126a981612577565b809150509250929050565b600080600080608085870312156126ca57600080fd5b84356126d581612577565b935060208501356126e581612577565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612733576127336126fa565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612762576127626126fa565b604052919050565b600082601f83011261277b57600080fd5b813567ffffffffffffffff811115612795576127956126fa565b6127a8601f8201601f1916602001612739565b8181528460208386010111156127bd57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156127f057600080fd5b84356127fb81612577565b9350602085013561280b81612577565b925060408501359150606085013567ffffffffffffffff81111561282e57600080fd5b61283a8782880161276a565b91505092959194509250565b60006040828403121561285857600080fd5b50919050565b60008060006060848603121561287357600080fd5b833561287e81612577565b9250602084013561288e81612577565b929592945050506040919091013590565b6000608082840312156128b157600080fd5b6040516080810167ffffffffffffffff82821081831117156128d5576128d56126fa565b8160405282935084359150808211156128ed57600080fd5b6128f98683870161276a565b835260208501356020840152604085013591508082111561291957600080fd5b506129268582860161276a565b604083015250606083013561293a81612577565b6060919091015292915050565b60006020828403121561295957600080fd5b813567ffffffffffffffff81111561297057600080fd5b610e248482850161289f565b6000806040838503121561298f57600080fd5b823567ffffffffffffffff808211156129a757600080fd5b6129b38683870161289f565b93506020915081850135818111156129ca57600080fd5b8501601f810187136129db57600080fd5b8035828111156129ed576129ed6126fa565b8060051b6129fc858201612739565b918252828101850191858101908a841115612a1657600080fd5b86850192505b83831015612a5257823586811115612a345760008081fd5b612a428c898389010161276a565b8352509186019190860190612a1c565b809750505050505050509250929050565b60008083601f840112612a7557600080fd5b50813567ffffffffffffffff811115612a8d57600080fd5b60208301915083602082850101111561216357600080fd5b600080600080600060808688031215612abd57600080fd5b8535612ac881612577565b94506020860135612ad881612577565b935060408601359250606086013567ffffffffffffffff811115612afb57600080fd5b612b0788828901612a63565b969995985093965092949392505050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612b5057634e487b7160e01b600052602160045260246000fd5b91905290565b600080600060608486031215612b6b57600080fd5b833592506020840135612b7d81612577565b9150604084013560038110612b9157600080fd5b809150509250925092565b60008060008060608587031215612bb257600080fd5b8435612bbd81612577565b935060208501359250604085013567ffffffffffffffff811115612be057600080fd5b612bec87828801612a63565b95989497509550505050565b8015158114610dac57600080fd5b60008060408385031215612c1957600080fd5b8235612c2481612577565b915060208301356126a981612bf8565b60008060208385031215612c4757600080fd5b823567ffffffffffffffff811115612c5e57600080fd5b612c6a85828601612a63565b90969095509350505050565b600080600060608486031215612c8b57600080fd5b8335612c9681612577565b92506020840135612ca681612577565b91506040840135612b9181612bf8565b60008060408385031215612cc957600080fd5b8235612cd481612577565b915060208301356126a981612577565b600060208284031215612cf657600080fd5b815161157e81612bf8565b600181811c90821680612d1557607f821691505b60208210810361285857634e487b7160e01b600052602260045260246000fd5b600060408284031215612d4757600080fd5b612d4f612710565b823581526020830135612d6181612577565b60208201529392505050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600060408284031215612dcc57600080fd5b612dd4612710565b825181526020830151612d6181612577565b6020808252601e908201527f4e4f444548414e444c45523a205045524d495353494f4e5f44454e4945440000604082015260600190565b60008351612e2f8184602088016125dc565b835190830190612e438183602088016125dc565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008251612eb98184602087016125dc565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600060018201612eeb57612eeb612ec3565b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b80820180821115610b6857610b68612ec3565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612f8a90830184612600565b9695505050505050565b600060208284031215612fa657600080fd5b815161157e816125a956fea2646970667358221220fbfb6f1464a727dd2e96f5cdec77576d41fb558cfc297a807fe48fd02b01ee2064736f6c63430008130033";

type $OrganisationsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $OrganisationsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $Organisations__factory extends ContractFactory {
  constructor(...args: $OrganisationsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      $Organisations & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): $Organisations__factory {
    return super.connect(runner) as $Organisations__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $OrganisationsInterface {
    return new Interface(_abi) as $OrganisationsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): $Organisations {
    return new Contract(address, _abi, runner) as unknown as $Organisations;
  }
}
