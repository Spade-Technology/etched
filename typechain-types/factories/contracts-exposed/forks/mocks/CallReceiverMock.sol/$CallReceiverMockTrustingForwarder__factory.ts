/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../../../common";
import type {
  $CallReceiverMockTrustingForwarder,
  $CallReceiverMockTrustingForwarderInterface,
} from "../../../../../contracts-exposed/forks/mocks/CallReceiverMock.sol/$CallReceiverMockTrustingForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "__hh_exposed_bytecode_marker",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260978060116000396000f3fe60806040526004361060205760003560e01c8063342db73914602b57600080fd5b36602657005b600080fd5b348015603657600080fd5b50604f6e1a185c991a185d0b595e1c1bdcd959608a1b81565b60405190815260200160405180910390f3fea2646970667358221220952bcdaac189e74dcc231467c46db431d76425bb0e92c14f37a32fa14f74f55b64736f6c63430008130033";

type $CallReceiverMockTrustingForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $CallReceiverMockTrustingForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $CallReceiverMockTrustingForwarder__factory extends ContractFactory {
  constructor(...args: $CallReceiverMockTrustingForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      $CallReceiverMockTrustingForwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): $CallReceiverMockTrustingForwarder__factory {
    return super.connect(runner) as $CallReceiverMockTrustingForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $CallReceiverMockTrustingForwarderInterface {
    return new Interface(_abi) as $CallReceiverMockTrustingForwarderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): $CallReceiverMockTrustingForwarder {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as $CallReceiverMockTrustingForwarder;
  }
}
