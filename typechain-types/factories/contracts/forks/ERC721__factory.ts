/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { ERC721, ERC721Interface } from "../../../contracts/forks/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200144c3803806200144c83398101604081905262000034916200012f565b600080546001600160a01b0319169055600162000052838262000228565b50600262000061828262000228565b505050620002f4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009257600080fd5b81516001600160401b0380821115620000af57620000af6200006a565b604051601f8301601f19908116603f01168101908282118183101715620000da57620000da6200006a565b81604052838152602092508683858801011115620000f757600080fd5b600091505b838210156200011b5785820183015181830184015290820190620000fc565b600093810190920192909252949350505050565b600080604083850312156200014357600080fd5b82516001600160401b03808211156200015b57600080fd5b620001698683870162000080565b935060208501519150808211156200018057600080fd5b506200018f8582860162000080565b9150509250929050565b600181811c90821680620001ae57607f821691505b602082108103620001cf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022357600081815260208120601f850160051c81016020861015620001fe5750805b601f850160051c820191505b818110156200021f578281556001016200020a565b5050505b505050565b81516001600160401b038111156200024457620002446200006a565b6200025c8162000255845462000199565b84620001d5565b602080601f8311600181146200029457600084156200027b5750858301515b600019600386901b1c1916600185901b1785556200021f565b600085815260208120601f198616915b82811015620002c557888601518255948401946001909101908401620002a4565b5085821015620002e45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61114880620003046000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610cd4565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610d41565b61012461011f366004610d54565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610d89565b610333565b005b61014f61015f366004610db3565b61045f565b61014f610172366004610db3565b610497565b610124610185366004610d54565b6104b2565b61019d610198366004610def565b610512565b6040519081526020016100f3565b610104610598565b61014f6101c1366004610e0a565b6105a7565b61014f6101d4366004610e5c565b6105bd565b6101046101e7366004610d54565b6105fc565b6100e76101fa366004610f38565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461028990610f6b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610f6b565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b600061031782610670565b506000908152600560205260409020546001600160a01b031690565b600061033e826104b2565b9050806001600160a01b0316836001600160a01b0316036103b05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b806001600160a01b03166103c26106d2565b6001600160a01b031614806103de57506103de816101fa6106d2565b6104505760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103a7565b61045a83836106f9565b505050565b61047061046a6106d2565b82610767565b61048c5760405162461bcd60e51b81526004016103a790610fa5565b61045a8383836107e6565b61045a838383604051806020016040528060008152506105bd565b6000818152600360205260408120546001600160a01b0316806102745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b60006001600160a01b03821661057c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103a7565b506001600160a01b031660009081526004602052604090205490565b60606002805461028990610f6b565b6105b96105b26106d2565b838361094a565b5050565b6105ce6105c86106d2565b83610767565b6105ea5760405162461bcd60e51b81526004016103a790610fa5565b6105f684848484610a18565b50505050565b606061060782610670565b600061061e60408051602081019091526000815290565b9050600081511161063e5760405180602001604052806000815250610669565b8061064884610a4b565b604051602001610659929190610ff2565b6040516020818303038152906040525b9392505050565b6000818152600360205260409020546001600160a01b03166106cf5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b50565b600080546001600160a01b0316156106f457506000546001600160a01b031690565b503390565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061072e826104b2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610773836104b2565b9050806001600160a01b0316846001600160a01b031614806107ba57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806107de5750836001600160a01b03166107d38461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166107f9826104b2565b6001600160a01b03161461081f5760405162461bcd60e51b81526004016103a790611021565b6001600160a01b0382166108815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a7565b826001600160a01b0316610894826104b2565b6001600160a01b0316146108ba5760405162461bcd60e51b81526004016103a790611021565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316036109ab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a7565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a238484846107e6565b610a2f84848484610ade565b6105f65760405162461bcd60e51b81526004016103a790611066565b60606000610a5883610be6565b600101905060008167ffffffffffffffff811115610a7857610a78610e46565b6040519080825280601f01601f191660200182016040528015610aa2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610aac57509392505050565b60006001600160a01b0384163b15610bdb57836001600160a01b031663150b7a02610b076106d2565b8786866040518563ffffffff1660e01b8152600401610b2994939291906110b8565b6020604051808303816000875af1925050508015610b64575060408051601f3d908101601f19168201909252610b61918101906110f5565b60015b610bc1573d808015610b92576040519150601f19603f3d011682016040523d82523d6000602084013e610b97565b606091505b508051600003610bb95760405162461bcd60e51b81526004016103a790611066565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107de565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c255772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c51576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c6f57662386f26fc10000830492506010015b6305f5e1008310610c87576305f5e100830492506008015b6127108310610c9b57612710830492506004015b60648310610cad576064830492506002015b600a83106102745760010192915050565b6001600160e01b0319811681146106cf57600080fd5b600060208284031215610ce657600080fd5b813561066981610cbe565b60005b83811015610d0c578181015183820152602001610cf4565b50506000910152565b60008151808452610d2d816020860160208601610cf1565b601f01601f19169290920160200192915050565b6020815260006106696020830184610d15565b600060208284031215610d6657600080fd5b5035919050565b80356001600160a01b0381168114610d8457600080fd5b919050565b60008060408385031215610d9c57600080fd5b610da583610d6d565b946020939093013593505050565b600080600060608486031215610dc857600080fd5b610dd184610d6d565b9250610ddf60208501610d6d565b9150604084013590509250925092565b600060208284031215610e0157600080fd5b61066982610d6d565b60008060408385031215610e1d57600080fd5b610e2683610d6d565b915060208301358015158114610e3b57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e7257600080fd5b610e7b85610d6d565b9350610e8960208601610d6d565b925060408501359150606085013567ffffffffffffffff80821115610ead57600080fd5b818701915087601f830112610ec157600080fd5b813581811115610ed357610ed3610e46565b604051601f8201601f19908116603f01168101908382118183101715610efb57610efb610e46565b816040528281528a6020848701011115610f1457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f4b57600080fd5b610f5483610d6d565b9150610f6260208401610d6d565b90509250929050565b600181811c90821680610f7f57607f821691505b602082108103610f9f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611004818460208801610cf1565b835190830190611018818360208801610cf1565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906110eb90830184610d15565b9695505050505050565b60006020828403121561110757600080fd5b815161066981610cbe56fea26469706673582212207b760c593af91a9c1cf5bfeb7ce259ade641617b09eb60f82f6c467af0b853b864736f6c63430008130033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<
      ERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721__factory {
    return super.connect(runner) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721 {
    return new Contract(address, _abi, runner) as unknown as ERC721;
  }
}
