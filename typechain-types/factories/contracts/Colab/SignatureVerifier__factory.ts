/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  SignatureVerifier,
  SignatureVerifierInterface,
} from "../../../contracts/Colab/SignatureVerifier";

const _abi = [
  {
    inputs: [],
    name: "PayMaster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedMessage",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "messageHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_paymaster",
        type: "address",
      },
    ],
    name: "setPayMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class SignatureVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): SignatureVerifierInterface {
    return new Interface(_abi) as SignatureVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignatureVerifier {
    return new Contract(address, _abi, runner) as unknown as SignatureVerifier;
  }
}
