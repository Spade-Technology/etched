/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Organisations,
  OrganisationsInterface,
} from "../../../contracts/COrganisation.sol/Organisations";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "_nodes",
    outputs: [
      {
        internalType: "bool",
        name: "isNode",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "addNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "createOrganisation",
    outputs: [
      {
        internalType: "uint256",
        name: "newOrgId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedMessage",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "messageHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "delegateCallsToSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfOrganisationsCreated",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOfOrganisations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "_isAdmin",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "_isMember",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "isNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organisation",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "permissionOf",
    outputs: [
      {
        internalType: "enum IOrganisation.EPermissions",
        name: "permission",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum IOrganisation.EPermissions",
        name: "permission",
        type: "uint8",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006040518060400160405280601181526020017022ba31b41027b933b0b734b9b0ba34b7b760791b815250604051806040016040528060068152602001650de5a8aa886960d31b8152506200006f6000620000cf60201b60201c565b60016200007d838262000210565b5060026200008c828262000210565b505050620000a9620000a3620000f160201b60201c565b62000119565b600880546001600160a01b0319166001600160a01b0392909216919091179055620002dc565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b0316156200011457506000546001600160a01b031690565b503390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019657607f821691505b602082108103620001b757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020b57600081815260208120601f850160051c81016020861015620001e65750805b601f850160051c820191505b818110156200020757828155600101620001f2565b5050505b505050565b81516001600160401b038111156200022c576200022c6200016b565b62000244816200023d845462000181565b84620001bd565b602080601f8311600181146200027c5760008415620002635750858301515b600019600386901b1c1916600185901b17855562000207565b600085815260208120601f198616915b82811015620002ad578886015182559484019460019091019084016200028c565b5085821015620002cc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61240a80620002ec6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637d9e10f5116100f95780639d95f1cc11610097578063c87b56dd11610071578063c87b56dd146103fc578063cef565aa1461040f578063e985e9c514610422578063f2fde38b1461045e57600080fd5b80639d95f1cc146103c3578063a22cb465146103d6578063b88d4fde146103e957600080fd5b80638da5cb5b116100d35780638da5cb5b1461035c57806395d89b411461036d57806397d32b5214610375578063999f066e146103b057600080fd5b80637d9e10f51461031557806380f760211461032857806381fb5d4b1461033957600080fd5b806323b872dd116101665780636352211e116101405780636352211e146102d157806370a08231146102e4578063715018a61461030557806373e3dc301461030d57600080fd5b806323b872dd1461029857806342842e0e146102ab5780634b4b98bd146102be57600080fd5b8063081812fc116101a2578063081812fc14610219578063095ea7b314610244578063146a291114610259578063150b7a021461026c57600080fd5b806301750152146101c957806301ffc9a7146101f157806306fdde0314610204575b600080fd5b6101dc6101d7366004611c45565b610471565b60405190151581526020015b60405180910390f35b6101dc6101ff366004611c78565b610526565b61020c610576565b6040516101e89190611ce5565b61022c610227366004611cf8565b610608565b6040516001600160a01b0390911681526020016101e8565b610257610252366004611d11565b61062f565b005b6101dc610267366004611d3d565b61075b565b61027f61027a366004611e4d565b6107c7565b6040516001600160e01b031990911681526020016101e8565b6102576102a6366004611eb9565b6107d8565b6102576102b9366004611eb9565b610810565b6102576102cc366004611f99565b61082b565b61022c6102df366004611cf8565b61090f565b6102f76102f2366004611c45565b61096f565b6040519081526020016101e8565b6102576109f5565b6102f7610a09565b6101dc610323366004611d3d565b610a19565b6008546001600160a01b031661022c565b6101dc610347366004611c45565b60096020526000908152604090205460ff1681565b6007546001600160a01b031661022c565b61020c610a86565b6103a3610383366004611d3d565b600b60209081526000928352604080842090915290825290205460ff1681565b6040516101e89190612087565b6102576103be3660046120af565b610a95565b6102576103d1366004611c45565b610b6a565b6102576103e4366004612103565b610b96565b6102576103f7366004611e4d565b610bac565b61020c61040a366004611cf8565b610beb565b6102f761041d366004611c45565b610c5f565b6101dc610430366004612131565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b61025761046c366004611c45565b610c86565b6008546000906001600160a01b03166104f75760085460405162ba80a960e11b81526001600160a01b03848116600483015290911690630175015290602401602060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f1919061215f565b92915050565b60096000610503610cff565b6001600160a01b0316815260208101919091526040016000205460ff1692915050565b60006001600160e01b031982166380ac58cd60e01b148061055757506001600160e01b03198216635b5e139f60e01b145b806104f157506301ffc9a760e01b6001600160e01b03198316146104f1565b6060600180546105859061217c565b80601f01602080910402602001604051908101604052809291908181526020018280546105b19061217c565b80156105fe5780601f106105d3576101008083540402835291602001916105fe565b820191906000526020600020905b8154815290600101906020018083116105e157829003601f168201915b5050505050905090565b600061061382610d26565b506000908152600560205260409020546001600160a01b031690565b600061063a8261090f565b9050806001600160a01b0316836001600160a01b0316036106ac5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b806001600160a01b03166106be610cff565b6001600160a01b031614806106da57506106da81610430610cff565b61074c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106a3565b6107568383610d85565b505050565b6000816001600160a01b03166107708461090f565b6001600160a01b031603610786575060016104f1565b60026000848152600b602090815260408083206001600160a01b038716845290915290205460ff1660028111156107bf576107bf612071565b149392505050565b630a85bd0160e11b5b949350505050565b6107e96107e3610cff565b82610df3565b6108055760405162461bcd60e51b81526004016106a3906121b6565b610756838383610e71565b61075683838360405180602001604052806000815250610bac565b8161083581610fd5565b6108406101d7610cff565b61088c5760405162461bcd60e51b815260206004820152601e60248201527f4e4f444548414e444c45523a205045524d495353494f4e5f44454e494544000060448201526064016106a3565b61089533610471565b806108b5575082606001516001600160a01b0316336001600160a01b0316145b6109015760405162461bcd60e51b815260206004820152601e60248201527f4e4f444548414e444c45523a205045524d495353494f4e5f44454e494544000060448201526064016106a3565b61075683606001518361112d565b6000818152600360205260408120546001600160a01b0316806104f15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106a3565b60006001600160a01b0382166109d95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106a3565b506001600160a01b031660009081526004602052604090205490565b6109fd6112d6565b610a07600061134f565b565b6000610a14600a5490565b905090565b6000816001600160a01b0316610a2e8461090f565b6001600160a01b031603610a44575060016104f1565b60016000848152600b602090815260408083206001600160a01b038716845290915290205460ff166002811115610a7d57610a7d612071565b10159392505050565b6060600280546105859061217c565b610aa183610267610cff565b610b215760405162461bcd60e51b8152602060048201526044602482018190527f4f5247414e49534154494f4e3a204f6e6c7920616e2061646d696e206f662074908201527f6865206f7267616e69736174696f6e2063616e20736574207065726d6973736960648201526337b7399760e11b608482015260a4016106a3565b6000838152600b602090815260408083206001600160a01b03861684529091529020805482919060ff19166001836002811115610b6057610b60612071565b0217905550505050565b610b726112d6565b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b610ba8610ba1610cff565b83836113a1565b5050565b610bbd610bb7610cff565b83610df3565b610bd95760405162461bcd60e51b81526004016106a3906121b6565b610be58484848461146f565b50505050565b6060610bf682610d26565b6000610c0d60408051602081019091526000815290565b90506000815111610c2d5760405180602001604052806000815250610c58565b80610c37846114a2565b604051602001610c48929190612203565b6040516020818303038152906040525b9392505050565b6000610c6f600a80546001019055565b6000610c7a600a5490565b90506104f18382611535565b610c8e6112d6565b6001600160a01b038116610cf35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a3565b610cfc8161134f565b50565b600080546001600160a01b031615610d2157506000546001600160a01b031690565b503390565b6000818152600360205260409020546001600160a01b0316610cfc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106a3565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610dba8261090f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610dff8361090f565b9050806001600160a01b0316846001600160a01b03161480610e4657506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806107d05750836001600160a01b0316610e5f84610608565b6001600160a01b031614949350505050565b826001600160a01b0316610e848261090f565b6001600160a01b031614610eaa5760405162461bcd60e51b81526004016106a390612232565b6001600160a01b038216610f0c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106a3565b826001600160a01b0316610f1f8261090f565b6001600160a01b031614610f455760405162461bcd60e51b81526004016106a390612232565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60208101518151610feb90805160209091012090565b1461104d5760405162461bcd60e51b815260206004820152602c60248201527f546865206d657373616765206861736820646f65736e2774206d61746368207460448201526b6865206f726967696e616c2160a01b60648201526084016106a3565b602080820151604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c019052805191012060006110a982846040015161154f565b905082606001516001600160a01b0316816001600160a01b0316146111015760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b4b3b732b960911b60448201526064016106a3565b6000836000015180602001905181019061111b9190612277565b905061112681611573565b5050505050565b816001600160a01b0381166111905760405162461bcd60e51b815260206004820152602360248201527f436f6e746578743a206e6577436f6e74657874206973207a65726f206164647260448201526265737360e81b60648201526084016106a3565b611198610cff565b6001600160a01b0316816001600160a01b0316036112075760405162461bcd60e51b815260206004820152602660248201527f436f6e746578743a206e6577436f6e746578742069732063757272656e7420636044820152651bdb9d195e1d60d21b60648201526084016106a3565b61121081611620565b60005b82518110156112cb57600080306001600160a01b031685848151811061123b5761123b6122cf565b602002602001015160405161125091906122e5565b600060405180830381855af49150503d806000811461128b576040519150601f19603f3d011682016040523d82523d6000602084013e611290565b606091505b50915091508181906112b55760405162461bcd60e51b81526004016106a39190611ce5565b50505080806112c390612301565b915050611213565b506107566000611620565b6112de610cff565b6001600160a01b03166112f96007546001600160a01b031690565b6001600160a01b031614610a075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a3565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036114025760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a3565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61147a848484610e71565b61148684848484611642565b610be55760405162461bcd60e51b81526004016106a390612328565b606060006114af83611747565b600101905060008167ffffffffffffffff8111156114cf576114cf611d6d565b6040519080825280601f01601f1916602001820160405280156114f9576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461150357509392505050565b610ba882826040518060200160405280600081525061181f565b600080600061155e8585611852565b9150915061156b81611897565b509392505050565b80516000906001600160a01b031630146115cf5760405162461bcd60e51b815260206004820152601c60248201527f546172676574206164647265737320646f65736e2774206d617463680000000060448201526064016106a3565b43826020015110156116185760405162461bcd60e51b815260206004820152601260248201527113595cdcd859d9481a5cc8195e1c1a5c995960721b60448201526064016106a3565b506001919050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0384163b1561173f57836001600160a01b031663150b7a0261166b610cff565b8786866040518563ffffffff1660e01b815260040161168d949392919061237a565b6020604051808303816000875af19250505080156116c8575060408051601f3d908101601f191682019092526116c5918101906123b7565b60015b611725573d8080156116f6576040519150601f19603f3d011682016040523d82523d6000602084013e6116fb565b606091505b50805160000361171d5760405162461bcd60e51b81526004016106a390612328565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107d0565b5060016107d0565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117865772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117b2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117d057662386f26fc10000830492506010015b6305f5e10083106117e8576305f5e100830492506008015b61271083106117fc57612710830492506004015b6064831061180e576064830492506002015b600a83106104f15760010192915050565b61182983836119e1565b6118366000848484611642565b6107565760405162461bcd60e51b81526004016106a390612328565b60008082516041036118885760208301516040840151606085015160001a61187c87828585611b6c565b94509450505050611890565b506000905060025b9250929050565b60008160048111156118ab576118ab612071565b036118b35750565b60018160048111156118c7576118c7612071565b036119145760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106a3565b600281600481111561192857611928612071565b036119755760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106a3565b600381600481111561198957611989612071565b03610cfc5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106a3565b6001600160a01b038216611a375760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a3565b6000818152600360205260409020546001600160a01b031615611a9c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a3565b6000818152600360205260409020546001600160a01b031615611b015760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a3565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ba35750600090506003611c27565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611bf7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611c2057600060019250925050611c27565b9150600090505b94509492505050565b6001600160a01b0381168114610cfc57600080fd5b600060208284031215611c5757600080fd5b8135610c5881611c30565b6001600160e01b031981168114610cfc57600080fd5b600060208284031215611c8a57600080fd5b8135610c5881611c62565b60005b83811015611cb0578181015183820152602001611c98565b50506000910152565b60008151808452611cd1816020860160208601611c95565b601f01601f19169290920160200192915050565b602081526000610c586020830184611cb9565b600060208284031215611d0a57600080fd5b5035919050565b60008060408385031215611d2457600080fd5b8235611d2f81611c30565b946020939093013593505050565b60008060408385031215611d5057600080fd5b823591506020830135611d6281611c30565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611da657611da6611d6d565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611dd557611dd5611d6d565b604052919050565b600082601f830112611dee57600080fd5b813567ffffffffffffffff811115611e0857611e08611d6d565b611e1b601f8201601f1916602001611dac565b818152846020838601011115611e3057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215611e6357600080fd5b8435611e6e81611c30565b93506020850135611e7e81611c30565b925060408501359150606085013567ffffffffffffffff811115611ea157600080fd5b611ead87828801611ddd565b91505092959194509250565b600080600060608486031215611ece57600080fd5b8335611ed981611c30565b92506020840135611ee981611c30565b929592945050506040919091013590565b600082601f830112611f0b57600080fd5b8135602067ffffffffffffffff80831115611f2857611f28611d6d565b8260051b611f37838201611dac565b9384528581018301938381019088861115611f5157600080fd5b84880192505b85831015611f8d57823584811115611f6f5760008081fd5b611f7d8a87838c0101611ddd565b8352509184019190840190611f57565b98975050505050505050565b60008060408385031215611fac57600080fd5b823567ffffffffffffffff80821115611fc457600080fd5b9084019060808287031215611fd857600080fd5b611fe0611d83565b823582811115611fef57600080fd5b611ffb88828601611ddd565b8252506020830135602082015260408301358281111561201a57600080fd5b61202688828601611ddd565b6040830152506060830135925061203c83611c30565b82606082015280945050602085013591508082111561205a57600080fd5b5061206785828601611efa565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106120a957634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000606084860312156120c457600080fd5b8335925060208401356120d681611c30565b91506040840135600381106120ea57600080fd5b809150509250925092565b8015158114610cfc57600080fd5b6000806040838503121561211657600080fd5b823561212181611c30565b91506020830135611d62816120f5565b6000806040838503121561214457600080fd5b823561214f81611c30565b91506020830135611d6281611c30565b60006020828403121561217157600080fd5b8151610c58816120f5565b600181811c9082168061219057607f821691505b6020821081036121b057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351612215818460208801611c95565b835190830190612229818360208801611c95565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60006040828403121561228957600080fd5b6040516040810181811067ffffffffffffffff821117156122ac576122ac611d6d565b60405282516122ba81611c30565b81526020928301519281019290925250919050565b634e487b7160e01b600052603260045260246000fd5b600082516122f7818460208701611c95565b9190910192915050565b60006001820161232157634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123ad90830184611cb9565b9695505050505050565b6000602082840312156123c957600080fd5b8151610c5881611c6256fea2646970667358221220c6325db0b8dd605740f254f99073c39bc4ae3e7706e0695c631b48ba619bda2264736f6c63430008130033";

type OrganisationsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganisationsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Organisations__factory extends ContractFactory {
  constructor(...args: OrganisationsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Organisations & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Organisations__factory {
    return super.connect(runner) as Organisations__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganisationsInterface {
    return new Interface(_abi) as OrganisationsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Organisations {
    return new Contract(address, _abi, runner) as unknown as Organisations;
  }
}
