/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Organisations,
  OrganisationsInterface,
} from "../../../contracts/COrganisation.sol/Organisations";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "_nodes",
    outputs: [
      {
        internalType: "bool",
        name: "isNode",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "addNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "createOrganisation",
    outputs: [
      {
        internalType: "uint256",
        name: "newOrgId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "delegateCallsToSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfOrganisationsCreated",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOfOrganisations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "_isAdmin",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "_isMember",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "isNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organisation",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "permissionOf",
    outputs: [
      {
        internalType: "enum IOrganisation.EPermissions",
        name: "permission",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum IOrganisation.EPermissions",
        name: "permission",
        type: "uint8",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006040518060400160405280601181526020017022ba31b41027b933b0b734b9b0ba34b7b760791b815250604051806040016040528060068152602001650de5a8aa886960d31b81525081600090816200006e9190620001bb565b5060016200007d8282620001bb565b5050506200009a62000094620000c060201b60201c565b620000c4565b600780546001600160a01b0319166001600160a01b039290921691909117905562000287565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611c7380620002976000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637d9e10f5116100f95780639d95f1cc11610097578063c87b56dd11610071578063c87b56dd146103fc578063cef565aa1461040f578063e985e9c514610422578063f2fde38b1461045e57600080fd5b80639d95f1cc146103c3578063a22cb465146103d6578063b88d4fde146103e957600080fd5b80638da5cb5b116100d35780638da5cb5b1461035c57806395d89b411461036d57806397d32b5214610375578063999f066e146103b057600080fd5b80637d9e10f51461031557806380f760211461032857806381fb5d4b1461033957600080fd5b806323b872dd116101665780636352211e116101405780636352211e146102d157806370a08231146102e4578063715018a61461030557806373e3dc301461030d57600080fd5b806323b872dd1461029857806338982096146102ab57806342842e0e146102be57600080fd5b8063081812fc116101a2578063081812fc14610219578063095ea7b314610244578063146a291114610259578063150b7a021461026c57600080fd5b806301750152146101c957806301ffc9a7146101f157806306fdde0314610204575b600080fd5b6101dc6101d73660046115f1565b610471565b60405190151581526020015b60405180910390f35b6101dc6101ff366004611622565b610514565b61020c610564565b6040516101e8919061168f565b61022c6102273660046116a2565b6105f6565b6040516001600160a01b0390911681526020016101e8565b6102576102523660046116bb565b61061d565b005b6101dc6102673660046116e5565b610737565b61027f61027a3660046117c8565b6107a3565b6040516001600160e01b031990911681526020016101e8565b6102576102a6366004611830565b6107b4565b6102576102b936600461186c565b6107e5565b6102576102cc366004611830565b6108f9565b61022c6102df3660046116a2565b610914565b6102f76102f23660046115f1565b610974565b6040519081526020016101e8565b6102576109fa565b6102f7610a0e565b6101dc6103233660046116e5565b610a1e565b6007546001600160a01b031661022c565b6101dc6103473660046115f1565b60086020526000908152604090205460ff1681565b6006546001600160a01b031661022c565b61020c610a8b565b6103a36103833660046116e5565b600a60209081526000928352604080842090915290825290205460ff1681565b6040516101e89190611945565b6102576103be36600461196d565b610a9a565b6102576103d13660046115f1565b610b6d565b6102576103e43660046119bf565b610be6565b6102576103f73660046117c8565b610bf1565b61020c61040a3660046116a2565b610c29565b6102f761041d3660046115f1565b610c9d565b6101dc6104303660046119f6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61025761046c3660046115f1565b610cc4565b6007546000906001600160a01b03166104f75760075460405162ba80a960e11b81526001600160a01b03848116600483015290911690630175015290602401602060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190611a20565b92915050565b50503360009081526008602052604090205460ff1690565b919050565b60006001600160e01b031982166380ac58cd60e01b148061054557506001600160e01b03198216635b5e139f60e01b145b806104f157506301ffc9a760e01b6001600160e01b03198316146104f1565b60606000805461057390611a3d565b80601f016020809104026020016040519081016040528092919081815260200182805461059f90611a3d565b80156105ec5780601f106105c1576101008083540402835291602001916105ec565b820191906000526020600020905b8154815290600101906020018083116105cf57829003601f168201915b5050505050905090565b600061060182610d3d565b506000908152600460205260409020546001600160a01b031690565b600061062882610914565b9050806001600160a01b0316836001600160a01b03160361069a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106b657506106b68133610430565b6107285760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610691565b6107328383610d9c565b505050565b6000816001600160a01b031661074c84610914565b6001600160a01b031603610762575060016104f1565b60026000848152600a602090815260408083206001600160a01b038716845290915290205460ff16600281111561079b5761079b61192f565b149392505050565b630a85bd0160e11b5b949350505050565b6107be3382610e0a565b6107da5760405162461bcd60e51b815260040161069190611a77565b610732838383610e88565b6107ee33610471565b61083a5760405162461bcd60e51b815260206004820152601e60248201527f4e4f444548414e444c45523a205045524d495353494f4e5f44454e49454400006044820152606401610691565b60005b81518110156108f557600080306001600160a01b031684848151811061086557610865611ac4565b602002602001015160405161087a9190611ada565b600060405180830381855af49150503d80600081146108b5576040519150601f19603f3d011682016040523d82523d6000602084013e6108ba565b606091505b50915091508181906108df5760405162461bcd60e51b8152600401610691919061168f565b50505080806108ed90611af6565b91505061083d565b5050565b61073283838360405180602001604052806000815250610bf1565b6000818152600260205260408120546001600160a01b0316806104f15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610691565b60006001600160a01b0382166109de5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610691565b506001600160a01b031660009081526003602052604090205490565b610a02610fec565b610a0c6000611046565b565b6000610a1960095490565b905090565b6000816001600160a01b0316610a3384610914565b6001600160a01b031603610a49575060016104f1565b60016000848152600a602090815260408083206001600160a01b038716845290915290205460ff166002811115610a8257610a8261192f565b10159392505050565b60606001805461057390611a3d565b610aa48333610737565b610b245760405162461bcd60e51b8152602060048201526044602482018190527f4f5247414e49534154494f4e3a204f6e6c7920616e2061646d696e206f662074908201527f6865206f7267616e69736174696f6e2063616e20736574207065726d6973736960648201526337b7399760e11b608482015260a401610691565b6000838152600a602090815260408083206001600160a01b03861684529091529020805482919060ff19166001836002811115610b6357610b6361192f565b0217905550505050565b610b7633610471565b610bc25760405162461bcd60e51b815260206004820152601e60248201527f4e4f444548414e444c45523a205045524d495353494f4e5f44454e49454400006044820152606401610691565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6108f5338383611098565b610bfb3383610e0a565b610c175760405162461bcd60e51b815260040161069190611a77565b610c2384848484611166565b50505050565b6060610c3482610d3d565b6000610c4b60408051602081019091526000815290565b90506000815111610c6b5760405180602001604052806000815250610c96565b80610c7584611199565b604051602001610c86929190611b1d565b6040516020818303038152906040525b9392505050565b6000610cad600980546001019055565b6000610cb860095490565b90506104f1838261122c565b610ccc610fec565b6001600160a01b038116610d315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610691565b610d3a81611046565b50565b6000818152600260205260409020546001600160a01b0316610d3a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610691565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610dd182610914565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e1683610914565b9050806001600160a01b0316846001600160a01b03161480610e5d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107ac5750836001600160a01b0316610e76846105f6565b6001600160a01b031614949350505050565b826001600160a01b0316610e9b82610914565b6001600160a01b031614610ec15760405162461bcd60e51b815260040161069190611b4c565b6001600160a01b038216610f235760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610691565b826001600160a01b0316610f3682610914565b6001600160a01b031614610f5c5760405162461bcd60e51b815260040161069190611b4c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610a0c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610691565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110f95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610691565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611171848484610e88565b61117d84848484611246565b610c235760405162461bcd60e51b815260040161069190611b91565b606060006111a683611344565b600101905060008167ffffffffffffffff8111156111c6576111c6611711565b6040519080825280601f01601f1916602001820160405280156111f0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846111fa57509392505050565b6108f582826040518060200160405280600081525061141c565b60006001600160a01b0384163b1561133c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061128a903390899088908890600401611be3565b6020604051808303816000875af19250505080156112c5575060408051601f3d908101601f191682019092526112c291810190611c20565b60015b611322573d8080156112f3576040519150601f19603f3d011682016040523d82523d6000602084013e6112f8565b606091505b50805160000361131a5760405162461bcd60e51b815260040161069190611b91565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107ac565b5060016107ac565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113835772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106113af576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106113cd57662386f26fc10000830492506010015b6305f5e10083106113e5576305f5e100830492506008015b61271083106113f957612710830492506004015b6064831061140b576064830492506002015b600a83106104f15760010192915050565b611426838361144f565b6114336000848484611246565b6107325760405162461bcd60e51b815260040161069190611b91565b6001600160a01b0382166114a55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610691565b6000818152600260205260409020546001600160a01b03161561150a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610691565b6000818152600260205260409020546001600160a01b03161561156f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610691565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b038116811461050f57600080fd5b60006020828403121561160357600080fd5b610c96826115da565b6001600160e01b031981168114610d3a57600080fd5b60006020828403121561163457600080fd5b8135610c968161160c565b60005b8381101561165a578181015183820152602001611642565b50506000910152565b6000815180845261167b81602086016020860161163f565b601f01601f19169290920160200192915050565b602081526000610c966020830184611663565b6000602082840312156116b457600080fd5b5035919050565b600080604083850312156116ce57600080fd5b6116d7836115da565b946020939093013593505050565b600080604083850312156116f857600080fd5b82359150611708602084016115da565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561175057611750611711565b604052919050565b600082601f83011261176957600080fd5b813567ffffffffffffffff81111561178357611783611711565b611796601f8201601f1916602001611727565b8181528460208386010111156117ab57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156117de57600080fd5b6117e7856115da565b93506117f5602086016115da565b925060408501359150606085013567ffffffffffffffff81111561181857600080fd5b61182487828801611758565b91505092959194509250565b60008060006060848603121561184557600080fd5b61184e846115da565b925061185c602085016115da565b9150604084013590509250925092565b6000602080838503121561187f57600080fd5b823567ffffffffffffffff8082111561189757600080fd5b818501915085601f8301126118ab57600080fd5b8135818111156118bd576118bd611711565b8060051b6118cc858201611727565b91825283810185019185810190898411156118e657600080fd5b86860192505b83831015611922578235858111156119045760008081fd5b6119128b89838a0101611758565b83525091860191908601906118ec565b9998505050505050505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061196757634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561198257600080fd5b83359250611992602085016115da565b91506040840135600381106119a657600080fd5b809150509250925092565b8015158114610d3a57600080fd5b600080604083850312156119d257600080fd5b6119db836115da565b915060208301356119eb816119b1565b809150509250929050565b60008060408385031215611a0957600080fd5b611a12836115da565b9150611708602084016115da565b600060208284031215611a3257600080fd5b8151610c96816119b1565b600181811c90821680611a5157607f821691505b602082108103611a7157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008251611aec81846020870161163f565b9190910192915050565b600060018201611b1657634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351611b2f81846020880161163f565b835190830190611b4381836020880161163f565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c1690830184611663565b9695505050505050565b600060208284031215611c3257600080fd5b8151610c968161160c56fea2646970667358221220de7ce7a4027b2b770569f6693c791ae121f5bcf1f3e82f4a019445268bca148a64736f6c63430008130033";

type OrganisationsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganisationsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Organisations__factory extends ContractFactory {
  constructor(...args: OrganisationsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Organisations & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Organisations__factory {
    return super.connect(runner) as Organisations__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganisationsInterface {
    return new Interface(_abi) as OrganisationsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Organisations {
    return new Contract(address, _abi, runner) as unknown as Organisations;
  }
}
