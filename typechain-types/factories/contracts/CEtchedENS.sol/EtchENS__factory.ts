/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EtchENS,
  EtchENSInterface,
} from "../../../contracts/CEtchedENS.sol/EtchENS";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "organisationContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "EtchENSCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "_nodes",
    outputs: [
      {
        internalType: "bool",
        name: "isNode",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "addNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedMessage",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "messageHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.Signature",
        name: "_signature",
        type: "tuple",
      },
    ],
    name: "checkSignature",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.EncodedMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedMessage",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "messageHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct SignatureVerifier.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "delegateCallsToSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ensOfWallet",
    outputs: [
      {
        internalType: "string",
        name: "ens",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extension",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getENS",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "isNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ens",
        type: "string",
      },
    ],
    name: "metadataOf",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ens",
        type: "string",
      },
    ],
    name: "walletOf",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002db538038062002db5833981016040819052620000349162000185565b80604051806040016040528060078152602001662e65746368657360c81b815250604051806040016040528060088152602001670cadce65a8aa886960c31b815250620000886000620000e960201b60201c565b60016200009683826200025c565b506002620000a582826200025c565b505050620000c2620000bc6200010b60201b60201c565b62000133565b600880546001600160a01b0319166001600160a01b03929092169190911790555062000328565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b0316156200012e57506000546001600160a01b031690565b503390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200019857600080fd5b81516001600160a01b0381168114620001b057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001e257607f821691505b6020821081036200020357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025757600081815260208120601f850160051c81016020861015620002325750805b601f850160051c820191505b8181101562000253578281556001016200023e565b5050505b505050565b81516001600160401b03811115620002785762000278620001b7565b6200029081620002898454620001cd565b8462000209565b602080601f831160018114620002c85760008415620002af5750858301515b600019600386901b1c1916600185901b17855562000253565b600085815260208120601f198616915b82811015620002f957888601518255948401946001909101908401620002d8565b5085821015620003185787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612a7d80620003386000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806381fb5d4b11610104578063b88d4fde116100a2578063df5eaa3d11610071578063df5eaa3d14610431578063e985e9c51461048e578063f2fde38b146104ca578063f387b302146104dd57600080fd5b8063b88d4fde146103f0578063c4e41b2214610403578063c87b56dd1461040b578063d204c45e1461041e57600080fd5b806395d89b41116100de57806395d89b41146103af5780639d95f1cc146103b7578063a22cb465146103ca578063a7ea49f2146103dd57600080fd5b806381fb5d4b146103475780638da5cb5b1461036a5780639453f89d1461037b57600080fd5b8063313a9940116101715780636352211e1161014b5780636352211e146102fa57806370a082311461030d578063715018a61461032e57806380f760211461033657600080fd5b8063313a99401461029d57806342842e0e146102d45780634b4b98bd146102e757600080fd5b8063081812fc116101ad578063081812fc14610224578063095ea7b31461024f57806323b872dd146102645780632d5537b01461027757600080fd5b806301750152146101d457806301ffc9a7146101fc57806306fdde031461020f575b600080fd5b6101e76101e23660046120cf565b6104fd565b60405190151581526020015b60405180910390f35b6101e761020a366004612102565b6105a2565b6102176105f2565b6040516101f3919061216f565b610237610232366004612182565b610684565b6040516001600160a01b0390911681526020016101f3565b61026261025d36600461219b565b6106ab565b005b6102626102723660046121c7565b6107d7565b610217604051806040016040528060078152602001660b995d18da195960ca1b81525081565b6102b06102ab366004612367565b61080f565b60408051825181526020928301516001600160a01b031692810192909252016101f3565b6102626102e23660046121c7565b61097d565b6102626102f536600461239c565b610998565b610237610308366004612182565b610a62565b61032061031b3660046120cf565b610ac2565b6040519081526020016101f3565b610262610b48565b6008546001600160a01b0316610237565b6101e76103553660046120cf565b60096020526000908152604090205460ff1681565b6007546001600160a01b0316610237565b610237610389366004612483565b8051602081830181018051600b825292820191909301209152546001600160a01b031681565b610217610b5c565b6102626103c53660046120cf565b610b6b565b6102626103d83660046124c6565b610b97565b6102176103eb36600461219b565b610c18565b6102626103fe3660046124ff565b610cd1565b610320610d10565b610217610419366004612182565b610d20565b61026261042c36600461256b565b610d94565b61046f61043f366004612483565b8051602081830181018051600c82529282019190930120915280546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016101f3565b6101e761049c3660046125bb565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6102626104d83660046120cf565b610f7e565b6104f06104eb3660046120cf565b610ff7565b6040516101f391906125e9565b6008546000906001600160a01b031661052f57506001600160a01b031660009081526009602052604090205460ff1690565b60085460405162ba80a960e11b81526001600160a01b03848116600483015290911690630175015290602401602060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c919061264b565b92915050565b60006001600160e01b031982166380ac58cd60e01b14806105d357506001600160e01b03198216635b5e139f60e01b145b8061059c57506301ffc9a760e01b6001600160e01b031983161461059c565b60606001805461060190612668565b80601f016020809104026020016040519081016040528092919081815260200182805461062d90612668565b801561067a5780601f1061064f5761010080835404028352916020019161067a565b820191906000526020600020905b81548152906001019060200180831161065d57829003601f168201915b5050505050905090565b600061068f826110e6565b506000908152600560205260409020546001600160a01b031690565b60006106b682610a62565b9050806001600160a01b0316836001600160a01b0316036107285760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b806001600160a01b031661073a611145565b6001600160a01b0316148061075657506107568161049c611145565b6107c85760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161071f565b6107d2838361116c565b505050565b6107e86107e2611145565b826111da565b6108045760405162461bcd60e51b815260040161071f906126a2565b6107d2838383611259565b60408051808201909152600080825260208201526020820151825161083990805160209091012090565b1461089b5760405162461bcd60e51b815260206004820152602c60248201527f546865206d657373616765206861736820646f65736e2774206d61746368207460448201526b6865206f726967696e616c2160a01b606482015260840161071f565b602080830151604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c019052805191012060006108f78285604001516113bd565b905083606001516001600160a01b0316816001600160a01b03161461094f5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b4b3b732b960911b604482015260640161071f565b6000846000015180602001905181019061096991906126ef565b9050610974816113e1565b50949350505050565b6107d283838360405180602001604052806000815250610cd1565b6109a36101e2611145565b6109bf5760405162461bcd60e51b815260040161071f90612745565b60006109ca8361080f565b60208101519091506001600160a01b03163314806109f3575060208101516001600160a01b0316155b610a0f5760405162461bcd60e51b815260040161071f90612745565b610a18336104fd565b80610a38575082606001516001600160a01b0316336001600160a01b0316145b610a545760405162461bcd60e51b815260040161071f90612745565b6107d2836060015183611434565b6000818152600360205260408120546001600160a01b03168061059c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161071f565b60006001600160a01b038216610b2c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161071f565b506001600160a01b031660009081526004602052604090205490565b610b50611566565b610b5a60006115df565b565b60606002805461060190612668565b610b73611566565b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b6001600160a01b038216610c025760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201526b3634b21037b832b930ba37b960a11b606482015260840161071f565b610c14610c0d611145565b8383611631565b5050565b600d6020528160005260406000208181548110610c3457600080fd5b90600052602060002001600091509150508054610c5090612668565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7c90612668565b8015610cc95780601f10610c9e57610100808354040283529160200191610cc9565b820191906000526020600020905b815481529060010190602001808311610cac57829003601f168201915b505050505081565b610ce2610cdc611145565b836111da565b610cfe5760405162461bcd60e51b815260040161071f906126a2565b610d0a848484846116f7565b50505050565b6000610d1b600a5490565b905090565b6060610d2b826110e6565b6000610d4260408051602081019091526000815290565b90506000815111610d625760405180602001604052806000815250610d8d565b80610d6c8461172a565b604051602001610d7d92919061277c565b6040516020818303038152906040525b9392505050565b610d9f6101e2611145565b610dbb5760405162461bcd60e51b815260040161071f90612745565b60006001600160a01b0316600b82604051610dd691906127ab565b908152604051908190036020019020546001600160a01b031614610e3c5760405162461bcd60e51b815260206004820152601a60248201527f4574636865733a20454e5320616c726561647920657869737473000000000000604482015260640161071f565b610e45816117bd565b50610e54600a80546001019055565b6000610e5f600a5490565b9050610e6b8382611a95565b82600b83604051610e7c91906127ab565b908152604080516020928190038301902080546001600160a01b0319166001600160a01b039485161790559185166000908152600d82529182208054600181018255908352912001610ece8382612815565b506040518060400160405280610ee2611145565b6001600160a01b0316815260200142815250600c83604051610f0491906127ab565b9081526040519081900360209081018220835181546001600160a01b039182166001600160a01b031990911617825593909101516001909101559084169082907f4bda451f347c60125bbc3086c6fa40845fd8882e9a0255f51833299fc3dd0ddc90610f7190869061216f565b60405180910390a3505050565b610f86611566565b6001600160a01b038116610feb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161071f565b610ff4816115df565b50565b6001600160a01b0381166000908152600d60209081526040808320805482518185028101850190935280835260609492939192909184015b828210156110db57838290600052602060002001805461104e90612668565b80601f016020809104026020016040519081016040528092919081815260200182805461107a90612668565b80156110c75780601f1061109c576101008083540402835291602001916110c7565b820191906000526020600020905b8154815290600101906020018083116110aa57829003601f168201915b50505050508152602001906001019061102f565b505050509050919050565b6000818152600360205260409020546001600160a01b0316610ff45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161071f565b600080546001600160a01b03161561116757506000546001600160a01b031690565b503390565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111a182610a62565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806111e683610a62565b9050806001600160a01b0316846001600160a01b0316148061122d57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806112515750836001600160a01b031661124684610684565b6001600160a01b0316145b949350505050565b826001600160a01b031661126c82610a62565b6001600160a01b0316146112925760405162461bcd60e51b815260040161071f906128d5565b6001600160a01b0382166112f45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161071f565b826001600160a01b031661130782610a62565b6001600160a01b03161461132d5760405162461bcd60e51b815260040161071f906128d5565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008060006113cc8585611aaf565b915091506113d981611af4565b509392505050565b6000438260000151101561142c5760405162461bcd60e51b815260206004820152601260248201527113595cdcd859d9481a5cc8195e1c1a5c995960721b604482015260640161071f565b506001919050565b816001600160a01b0381166114975760405162461bcd60e51b815260206004820152602360248201527f436f6e746578743a206e6577436f6e74657874206973207a65726f206164647260448201526265737360e81b606482015260840161071f565b6114a081611c3e565b60005b825181101561155b57600080306001600160a01b03168584815181106114cb576114cb61291a565b60200260200101516040516114e091906127ab565b600060405180830381855af49150503d806000811461151b576040519150601f19603f3d011682016040523d82523d6000602084013e611520565b606091505b50915091508181906115455760405162461bcd60e51b815260040161071f919061216f565b505050808061155390612946565b9150506114a3565b506107d26000611c3e565b61156e611145565b6001600160a01b03166115896007546001600160a01b031690565b6001600160a01b031614610b5a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071f565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036116925760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161071f565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101610f71565b611702848484611259565b61170e84848484611c60565b610d0a5760405162461bcd60e51b815260040161071f9061295f565b6060600061173783611d60565b600101905060008167ffffffffffffffff81111561175757611757612208565b6040519080825280601f01601f191660200182016040528015611781576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461178b57509392505050565b6040805180820190915260078152660b995d18da195960ca1b602082015281516000918391601e10156118275760405162461bcd60e51b8152602060048201526012602482015271454e533a204e616d6520746f6f206c6f6e6760701b604482015260640161071f565b80518251101561186f5760405162461bcd60e51b8152602060048201526013602482015272115394ce8813985b59481d1bdbc81cda1bdc9d606a1b604482015260640161071f565b60005b815181101561193a5781818151811061188d5761188d61291a565b602001015160f81c60f81b6001600160f81b0319168382845186516118b291906129b1565b6118bc91906129c4565b815181106118cc576118cc61291a565b01602001516001600160f81b031916146119285760405162461bcd60e51b815260206004820152601f60248201527f454e533a204e616d65206d75737420656e642077697468202e65746368656400604482015260640161071f565b8061193281612946565b915050611872565b5060005b8151835161194c91906129b1565b811015611a8a5760008382815181106119675761196761291a565b01602001516001600160f81b0319169050600360fc1b811080159061199a5750603960f81b6001600160f81b0319821611155b1580156119d05750604160f81b6001600160f81b03198216108015906119ce5750602d60f91b6001600160f81b0319821611155b155b8015611a055750606160f81b6001600160f81b0319821610801590611a035750603d60f91b6001600160f81b0319821611155b155b8015611a1f5750605f60f81b6001600160f81b0319821614155b15611a775760405162461bcd60e51b815260206004820152602260248201527f454e533a20496e76616c69642063686172616374657220696e20454e53206e616044820152616d6560f01b606482015260840161071f565b5080611a8281612946565b91505061193e565b506001949350505050565b610c14828260405180602001604052806000815250611e38565b6000808251604103611ae55760208301516040840151606085015160001a611ad987828585611e6b565b94509450505050611aed565b506000905060025b9250929050565b6000816004811115611b0857611b086129d7565b03611b105750565b6001816004811115611b2457611b246129d7565b03611b715760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161071f565b6002816004811115611b8557611b856129d7565b03611bd25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161071f565b6003816004811115611be657611be66129d7565b03610ff45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161071f565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0384163b15611a8a57836001600160a01b031663150b7a02611c89611145565b8786866040518563ffffffff1660e01b8152600401611cab94939291906129ed565b6020604051808303816000875af1925050508015611ce6575060408051601f3d908101601f19168201909252611ce391810190612a2a565b60015b611d43573d808015611d14576040519150601f19603f3d011682016040523d82523d6000602084013e611d19565b606091505b508051600003611d3b5760405162461bcd60e51b815260040161071f9061295f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611d9f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611dcb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611de957662386f26fc10000830492506010015b6305f5e1008310611e01576305f5e100830492506008015b6127108310611e1557612710830492506004015b60648310611e27576064830492506002015b600a831061059c5760010192915050565b611e428383611f2f565b611e4f6000848484611c60565b6107d25760405162461bcd60e51b815260040161071f9061295f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ea25750600090506003611f26565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ef6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611f1f57600060019250925050611f26565b9150600090505b94509492505050565b6001600160a01b038216611f855760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161071f565b6000818152600360205260409020546001600160a01b031615611fea5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161071f565b6000818152600360205260409020546001600160a01b03161561204f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161071f565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0381168114610ff457600080fd5b6000602082840312156120e157600080fd5b8135610d8d816120ba565b6001600160e01b031981168114610ff457600080fd5b60006020828403121561211457600080fd5b8135610d8d816120ec565b60005b8381101561213a578181015183820152602001612122565b50506000910152565b6000815180845261215b81602086016020860161211f565b601f01601f19169290920160200192915050565b602081526000610d8d6020830184612143565b60006020828403121561219457600080fd5b5035919050565b600080604083850312156121ae57600080fd5b82356121b9816120ba565b946020939093013593505050565b6000806000606084860312156121dc57600080fd5b83356121e7816120ba565b925060208401356121f7816120ba565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561224757612247612208565b604052919050565b600082601f83011261226057600080fd5b813567ffffffffffffffff81111561227a5761227a612208565b61228d601f8201601f191660200161221e565b8181528460208386010111156122a257600080fd5b816020850160208301376000918101602001919091529392505050565b6000608082840312156122d157600080fd5b6040516080810167ffffffffffffffff82821081831117156122f5576122f5612208565b81604052829350843591508082111561230d57600080fd5b6123198683870161224f565b835260208501356020840152604085013591508082111561233957600080fd5b506123468582860161224f565b604083015250606083013561235a816120ba565b6060919091015292915050565b60006020828403121561237957600080fd5b813567ffffffffffffffff81111561239057600080fd5b611251848285016122bf565b600080604083850312156123af57600080fd5b823567ffffffffffffffff808211156123c757600080fd5b6123d3868387016122bf565b93506020915081850135818111156123ea57600080fd5b8501601f810187136123fb57600080fd5b80358281111561240d5761240d612208565b8060051b61241c85820161221e565b918252828101850191858101908a84111561243657600080fd5b86850192505b83831015612472578235868111156124545760008081fd5b6124628c898389010161224f565b835250918601919086019061243c565b809750505050505050509250929050565b60006020828403121561249557600080fd5b813567ffffffffffffffff8111156124ac57600080fd5b6112518482850161224f565b8015158114610ff457600080fd5b600080604083850312156124d957600080fd5b82356124e4816120ba565b915060208301356124f4816124b8565b809150509250929050565b6000806000806080858703121561251557600080fd5b8435612520816120ba565b93506020850135612530816120ba565b925060408501359150606085013567ffffffffffffffff81111561255357600080fd5b61255f8782880161224f565b91505092959194509250565b6000806040838503121561257e57600080fd5b8235612589816120ba565b9150602083013567ffffffffffffffff8111156125a557600080fd5b6125b18582860161224f565b9150509250929050565b600080604083850312156125ce57600080fd5b82356125d9816120ba565b915060208301356124f4816120ba565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561263e57603f1988860301845261262c858351612143565b94509285019290850190600101612610565b5092979650505050505050565b60006020828403121561265d57600080fd5b8151610d8d816124b8565b600181811c9082168061267c57607f821691505b60208210810361269c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60006040828403121561270157600080fd5b6040516040810181811067ffffffffffffffff8211171561272457612724612208565b604052825181526020830151612739816120ba565b60208201529392505050565b6020808252601e908201527f4e4f444548414e444c45523a205045524d495353494f4e5f44454e4945440000604082015260600190565b6000835161278e81846020880161211f565b8351908301906127a281836020880161211f565b01949350505050565b600082516127bd81846020870161211f565b9190910192915050565b601f8211156107d257600081815260208120601f850160051c810160208610156127ee5750805b601f850160051c820191505b8181101561280d578281556001016127fa565b505050505050565b815167ffffffffffffffff81111561282f5761282f612208565b6128438161283d8454612668565b846127c7565b602080601f83116001811461287857600084156128605750858301515b600019600386901b1c1916600185901b17855561280d565b600085815260208120601f198616915b828110156128a757888601518255948401946001909101908401612888565b50858210156128c55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161295857612958612930565b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8181038181111561059c5761059c612930565b8082018082111561059c5761059c612930565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a2090830184612143565b9695505050505050565b600060208284031215612a3c57600080fd5b8151610d8d816120ec56fea2646970667358221220585b42793ae1d8b7d1ee0c3c8acece3bae25b87f9ebbe5ad71536458224b8f3764736f6c63430008130033";

type EtchENSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtchENSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtchENS__factory extends ContractFactory {
  constructor(...args: EtchENSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    organisationContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(organisationContract, overrides || {});
  }
  override deploy(
    organisationContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(organisationContract, overrides || {}) as Promise<
      EtchENS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EtchENS__factory {
    return super.connect(runner) as EtchENS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtchENSInterface {
    return new Interface(_abi) as EtchENSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EtchENS {
    return new Contract(address, _abi, runner) as unknown as EtchENS;
  }
}
